apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: revisions.serving.knative.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.serviceName
    name: Service Name
    type: string
  - JSONPath: .metadata.labels['serving\\.knative\\.dev/configurationGeneration']
    name: Generation
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: Ready
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].reason
    name: Reason
    type: string
  group: serving.knative.dev
  names:
    categories:
    - all
    - knative
    - serving
    kind: Revision
    plural: revisions
    shortNames:
    - rev
    singular: revision
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec holds the desired state of the Revision (from the client).
          properties:
            buildName:
              description: 'DeprecatedBuildName optionally holds the name of the Build
                responsible for producing the container image for its Revision. DEPRECATED:
                Use BuildRef instead.'
              type: string
            buildRef:
              description: BuildRef holds the reference to the build (if there is
                one) responsible for producing the container image for this Revision.
                Otherwise, nil
              type: object
            concurrencyModel:
              description: DeprecatedConcurrencyModel specifies the desired concurrency
                model (Single or Multi) for the Revision. Defaults to Multi. Deprecated
                in favor of ContainerConcurrency.
              type: string
            container:
              description: 'Container defines the unit of execution for this Revision.
                In the context of a Revision, we disallow a number of the fields of
                this Container, including: name and lifecycle. See also the runtime
                contract for more information about the execution environment: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
              type: object
            containerConcurrency:
              description: ContainerConcurrency specifies the maximum allowed in-flight
                (concurrent) requests per container of the Revision. Defaults to `0`
                which means unlimited concurrency. This field replaces ConcurrencyModel.
                A value of `1` is equivalent to `Single` and `0` is equivalent to
                `Multi`.
              format: int64
              type: integer
            generation:
              description: 'DeprecatedGeneration was used prior in Kubernetes versions
                <1.11 when metadata.generation was not being incremented by the api
                server  This property will be dropped in future Knative releases and
                should not be used - use metadata.generation  Tracking issue: https://github.com/knative/serving/issues/643'
              format: int64
              type: integer
            serviceAccountName:
              description: 'ServiceAccountName holds the name of the Kubernetes service
                account as which the underlying K8s resources should be run. If unspecified
                this will default to the "default" service account for the namespace
                in which the Revision exists. This may be used to provide access to
                private container images by following: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                TODO(ZhiminXiang): verify the corresponding service account exists.'
              type: string
            servingState:
              description: DeprecatedServingState holds a value describing the desired
                state the Kubernetes resources should be in for this Revision. Users
                must not specify this when creating a revision. These values are no
                longer updated by the system.
              type: string
            timeoutSeconds:
              description: TimeoutSeconds holds the max duration the instance is allowed
                for responding to a request.
              format: int64
              type: integer
            volumes:
              description: Volumes defines a set of Kubernetes volumes to be mounted
                into the specified Container.  Currently only ConfigMap and Secret
                volumes are supported.
              items:
                type: object
              type: array
          type: object
        status:
          description: Status communicates the observed state of the Revision (from
            the controller).
          properties:
            conditions:
              description: Conditions the latest available observations of a resource's
                current state. +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: object
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                      +required
                    type: string
                  type:
                    description: Type of condition. +required
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            imageDigest:
              description: ImageDigest holds the resolved digest for the image specified
                within .Spec.Container.Image. The digest is resolved during the creation
                of Revision. This field holds the digest value regardless of whether
                a tag or digest was originally specified in the Container object.
                It may be empty if the image comes from a registry listed to skip
                resolution.
              type: string
            logUrl:
              description: LogURL specifies the generated logging url for this particular
                revision based on the revision url template specified in the controller's
                config.
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            serviceName:
              description: ServiceName holds the name of a core Kubernetes Service
                resource that load balances over the pods backing this Revision. When
                the Revision is Active, this service would be an appropriate ingress
                target for targeting the revision.
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
